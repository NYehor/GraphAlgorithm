@{
    ViewBag.Title = "Home Page";
}

@Scripts.Render("~/bundles/Scripts")
<link rel="stylesheet" href="~/Content/Home.css">
<p>

</p>
<section>
    <ul class="nav nav-pills">
        <li class="dropdown">
            <button class="btn btn-primary dropdown-toggle margin-right" type="button" id="dropdownMenuButton"
                    data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Graph
            </button>
            <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                <li class="dropdown-item">Create</li>

                <li class="dropdown-divider"></li>

                <li id="tmpLi" class="dropdown-item">
                    <label for="openFileBtn" style="width:inherit" accept=".txt">Open</label>
                    <input id="openFileBtn" onclick="this.value=null;" style="display:none;" type="file">
                </li>

                <li class="dropdown-item">
                    <label data-toggle="modal" data-target="#saveDialog" style="width:inherit">Save</label>
                </li>
                <li class="dropdown-divider"></li>
                <li class="dropdown-item">
                    <label onclick="showAdjacency()" style="width:inherit">Adjacency Matrix </label>
                </li>
                <li class="dropdown-item">
                    <label onclick="showIncidence()" style="width:inherit">Incidence Matrix</label>
                </li>
                <li class="dropdown-divider"></li>
                <li class="dropdown-item">
                    <label onclick="removeElement()" style="width:inherit">Delete</label>
                </li>
            </ul>
        </li>
        <li type="button" class="btn btn-secondary margin-right" id="defaultBtn">Default</li>
        <li type="button" class="btn btn-primary margin-right" id="addBtn">Add</li>

        <li type="button" class="btn btn-primary margin-right" id="connectBtn">Connect</li>

        <li class="dropdown">
            <button class="btn btn-primary dropdown-toggle margin-right" type="button" id="dropdownMenuButton"
                    data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Algorithm
            </button>
            <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                @Html.ActionLink("Kruskal's Algorithm", "KruskalAlgorithm", "Home", new { @class = "dropdown-item" })
            </div>
        </li>

        <li type="button" class="btn btn-primary margin-right" id="deleteBtn">Delete</li>

    </ul>
</section>
<p>

</p>

<section>
    <div id="message" class="alert alert-success">
        Text
    </div>
</section>

<div id="cy"></div>

<script>
    function findDimensions() {
        var height = window.innerHeight; document.body.clientHeight;
        var el = document.getElementById("cy");

        el.style.height = height - 250 + "px";
    }

    if (window.addEventListener)
        window.addEventListener("load", findDimensions, false);
    else if (window.attachEvent)
        window.attachEvent("onload", findDimensions);
    window.onresize = findDimensions;

    document.getElementById("openFileBtn").addEventListener("change", function () {
        var file = this.files[0];
        var result = '';
        if (file) 
        {
            var reader = new FileReader();

            reader.onload = function (evt) {
                result = evt.target.result;

                var matrix = parseTextInput(result, ',');
                loadNewGraph(matrix, true)
            };

            reader.onerror = function (evt) {
                console.error("An error ocurred reading the file", evt);
            };

            reader.readAsText(file, "UTF-8");
        }
    }, false);

    function removeElement() {
        cy.elements().remove();
    }

    function showMatrix() {
        console.log(getAdjacencyMatrix());
        var incidence = adjacencyToIncidence(getAdjacencyMatrix());
        console.log(incidence);
        console.log(incidenceToAdjacency(incidence));

    }

    function download() {
        var filename = document.getElementById('fileName').value;
        var matrix = getAdjacencyMatrix();
        var text = matrixToString(matrix);

        var element = document.createElement('a');
        element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));
        element.setAttribute('download', filename);

        element.style.display = 'none';
        document.body.appendChild(element);

        element.click();

        document.body.removeChild(element);
    }

    function showIncidence() {
        $('#showIncidenceMatrix').modal();
        var matrix = getAdjacencyMatrix();
        matrix = adjacencyToIncidence(matrix);
        document.getElementById('textIncidenceMatrix').value = matrixToString(matrix);  
    }

    function showAdjacency() {
        $('#showAdjacencyMatrix').modal();
        var matrix = getAdjacencyMatrix();
        document.getElementById('textAdjacencyMatrix').value = matrixToString(matrix);
    }

    function matrixToString(matrix) {
        var strValue = '';
        for (var i = 0; i < matrix.length; i++) {
            for (var j = 0; j < matrix[0].length; j++) {
                strValue += matrix[i][j].toString() + ", ";
            }
            strValue += '\n';
        }
        return strValue;
    }

    function adjacencySaveChanges() {
        var text = document.getElementById('textAdjacencyMatrix').value;
        var matrix = parseTextInput(text, ',');
        loadNewGraph(matrix, true)
    }

    function incidenceSaveChanges() {
        var text = document.getElementById('textIncidenceMatrix').value;
        var matrix = parseTextInput(text, ',');
        loadNewGraph(matrix, false)
    }
</script>

<script src="~/Scripts/CustomScripts/Index.js"></script>

<p>

</p>

<div class="modal fade" id="connectDialog" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">Создать ребро</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body text-center">
                <input id="firstSelected" list="browsers">
                <b> -> </b>
                <input id="secondSelected" list="browsers">

                <datalist id="browsers"> 
                </datalist>
            </div>
            <div class="modal-body text-center">
                Вес: <input id="valueOfEdge" value="0">
            </div>
            <div class="modal-footer text-md-center">      
                <button type="button" class="btn btn-primary" data-dismiss="modal" onclick="addEdges()">Создать</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="saveDialog" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalCenterTitle">Create file</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body text-center">
                Name:  <input type="text" id="fileName">
                <button type="button" class="btn btn-primary" onclick="download()" data-dismiss="modal">Create</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="showAdjacencyMatrix" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Adjacency Matrix</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Задайте матрицу смежности. Используйте запятую "," в качестве разделителя</p>
                <textarea id="textAdjacencyMatrix" class="form-control" style="min-width: 100%; min-height:200px"></textarea>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" onclick="adjacencySaveChanges()" class="btn btn-primary" data-dismiss="modal">Save changes</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="showIncidenceMatrix" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Incidence Matrix</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Задайте матрицу смежности. Используйте запятую "," в качестве разделителя</p>
                <textarea id="textIncidenceMatrix" class="form-control" style="min-width: 100%; min-height:200px"></textarea>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" onclick="incidenceSaveChanges()" class="btn btn-primary" data-dismiss="modal">Save changes</button>
            </div>
        </div>
    </div>
</div>