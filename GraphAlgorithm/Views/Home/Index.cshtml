@{
    ViewBag.Title = "Home Page";
}

@Scripts.Render("~/bundles/Scripts")
<link rel="stylesheet" href="~/Content/Home.css">

<p>

</p>

<section>
    <ul class="nav nav-pills">
        <li class="dropdown">
            <button class="btn btn-primary dropdown-toggle margin-right" type="button" id="dropdownMenuButton"
                    data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Graph
            </button>
            <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                <a class="dropdown-item" href="#">Create</a>
                <a class="dropdown-item" href="#">Open </a>
                <a class="dropdown-item" href="#">Save </a>
                <div class="dropdown-divider"></div>
                <a class="dropdown-item" href="#">Adjacency Matrix </a>
                <a class="dropdown-item" href="#">Incidence Matrix </a>
                <div class="dropdown-divider"></div>
                <a class="dropdown-item" href="#">Delete </a>
            </div>
        </li>

        <li type="button" class="btn btn-secondary margin-right" id="addBtn">Add</li>

        <li type="button" class="btn btn-primary margin-right" id="connectBtn">Connect</li>

        <li class="dropdown">
            <button class="btn btn-primary dropdown-toggle margin-right" type="button" id="dropdownMenuButton"
                    data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Algorithm
            </button>
            <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                @Html.ActionLink("Kruskal's Algorithm", "KruskalAlgorithm", "Home", new { @class = "dropdown-item" })
            </div>
        </li>

        <li type="button" class="btn btn-primary margin-right" id="deleteBtn">Delete</li>

    </ul>
</section>
<p>

</p>

<section>
    <div id="message" class="alert alert-success">
        Text
    </div>
</section>

<div id="cy"></div>

<script src="~/Scripts/CustomScripts/Index.js"></script>

<script>
    function findDimensions() {
        var height = window.innerHeight; document.body.clientHeight;
        var el = document.getElementById("cy");

        el.style.height = height - 250 + "px";
    }

    if (window.addEventListener)
        window.addEventListener("load", findDimensions, false);
    else if (window.attachEvent)
        window.attachEvent("onload", findDimensions);
    window.onresize = findDimensions;
</script>

<p>

</p>

<div class="modal fade" id="connectDialog" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">Создать ребро</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body text-center">
                <input id="firstSelected" list="browsers">
                <b> -> </b>
                <input id="secondSelected" list="browsers">

                <datalist id="browsers"> 
                </datalist>
            </div>
            <div class="modal-body text-center">
                Вес: <input id="valueOfEdge">
            </div>
            <div class="modal-footer text-md-center">      
                <button type="button" class="btn btn-primary" data-dismiss="modal" onclick="addEdges()">Создать</button>
            </div>
        </div>
    </div>
</div>